import Head from 'next/head'

import { AppState } from '../redux/store'

import { Grid, Typography } from '@mui/material'
import { useGetPizzasQuery } from '../api/pizzas.api'
import { MainCard, Sceleton, Sort, Filter } from '../components'

import { useDispatch, useSelector } from 'react-redux'
import { addPizzas } from '../redux/slices/selectedPizzas'
import { CardDataType } from '../types/types'
// import simpleTheme from './../theme/theme'

// const Root = styled('div')(({ simpleTheme }) => ({
//   padding: simpleTheme.spacing(1),
//   [theme.breakpoints.down('md')]: {
//     backgroundColor: red[500]
//   },
//   [theme.breakpoints.up('md')]: {
//     backgroundColor: blue[500]
//   },
//   [theme.breakpoints.up('lg')]: {
//     backgroundColor: green[500]
//   }
// }))

export const allSets = ['тонкое', 'традиционное']
export const allSizes = [26, 30, 40]

const Home = () => {
  const { categoryId, sort } = useSelector((state: AppState) => state.filter)
  const dispatch = useDispatch()

  const { data, isFetching } = useGetPizzasQuery({ categoryId, sort })

  return (
    <>
      <Head>
        <title>NextBoots</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Grid container sx={{ justifyContent: 'space-between' }} gap={'10px'}>
        <Filter />
        <Sort />
      </Grid>

      <Typography variant='h2' component='div' mb='35px'>
        Все пиццы
      </Typography>
      <Grid container gap='10px' sx={{ justifyContent: 'space-between' }}>
        {isFetching
          ? [...Array(8)].map((_, index: number) => (
              <Grid
                item
                key={index}
                sx={{ display: 'flex', justifyContent: 'center' }}>
                <Sceleton key={index} />
              </Grid>
            ))
          : data?.map((card: CardDataType) => {
              return (
                <Grid
                  item
                  key={card.id}
                  sx={{ display: 'flex', justifyContent: 'center' }}>
                  <MainCard
                    card={card}
                    allSets={allSets}
                    allSizes={allSizes}
                    selectedPizzas={addPizzas}
                    dispatch={dispatch}
                  />
                </Grid>
              )
            })}
      </Grid>
    </>
  )
}

export default Home

// export const getServerSideProps: GetServerSideProps =
//   wrapper.getServerSideProps((store: AppStore) => async () => {
//     await store.dispatch(pizzaApi.endpoints.getAllPizzas.initiate())
//     return {
//       props: {}
//     }
//   })
